<!DOCTYPE html>
<html>
<%c++ auto login=@@.get<std::string>("login");
    auto voting_title = @@.get<std::string>("voting_title");
    auto voting_question = @@.get<std::string>("voting_question");
    auto options = @@.get<std::vector<std::string>>("options");
    auto options_amount = @@.get<int>("options_amount");
    auto voting_id = @@.get<std::string>("voting_id");
    auto crypto_parametr_n = @@.get<std::string>("crypto_parametr_n");
%>

                            <head>
                                <meta charset="UTF-8">
                                <title>Система EV</title>
                                <script src="https://cdn.jsdelivr.net/npm/paillier-bigint@latest/dist/bundle.iife.js"></script>
                                <script src="https://cdnjs.cloudflare.com/ajax/libs/js-sha256/0.9.0/sha256.min.js"></script>
                                <link rel="stylesheet" href="/css/main.css">
                            </head>

                            <body>
                                <div class="header">Система EV</div>
                                <div class="container">
                                    <div class="right">
                                        <div class="voting-form">
                                            <div class="voting-title">{%voting_title%}</div>
                                            <div class="voting-question">{%voting_question%}</div>

                                            <form id="votingForm" action="/voting/subscribe" method="post">
                                                <input type="hidden" name="voting_id" value="{%voting_id%}">
                                                <input type="hidden" name="encrypted_vote" id="encryptedVote">
                                                <input type="hidden" name="proof_e" id="proofE">
                                                <input type="hidden" name="proof_z" id="proofZ">
                                                <input type="hidden" name="proof_a" id="proofA">
                                                <%c++ for (size_t i=0; i < options.size(); ++i) { %>
                                                    <div class="option">
                                                        <input type="radio" id="option{%i%}" name="vote" value="{%i%}">
                                                        <label for="option{%i%}">{%options[i]%}</label>
                                                    </div>
                                                    <%c++ } %>

                                                        <button type="button" class="button sendVoteButton">Отправить голос</button>
                                            </form>
                                        </div>
                                    </div>
                                </div>

                                <div id="confirmationModal" class="modal">
                                    <div class="modal-content">
                                        <p>Точно отправить голос?</p>
                                        <div class="modal-buttons">
                                            <button class="modal-button confirm">Да</button>
                                            <button class="modal-button cancel">Нет</button>
                                        </div>
                                    </div>
                                </div>

                                <script>
                                    // Глобальные параметры, доступные для основного JS файла
                                    const EV_PARAMS = {
                                        voting_id: Number('{%voting_id%}'),
                                        options_amount: {%options_amount%},
                                        publicKey: {
                                            n: BigInt('{%crypto_parametr_n%}'),
                                            g: BigInt('{%crypto_parametr_n%}') + 1n
                                        }
                                    };
                                </script>
                                <script src="/js/zkp.js"></script>
                                <script>
                                    // Вызываем инициализацию после загрузки DOM
                                    document.addEventListener('DOMContentLoaded', () => {
                                        window.initializeZKP(EV_PARAMS);
                                    });
                                </script>
                            </body>

</html>